{"version":3,"sources":["pages/header/header.component.jsx","components/movie-details/movie-details.component.jsx","pages/home/home.component.jsx","components/movie-list/movie-list.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","fetchData","useState","type","setType","showMenu","value","element","document","getElementById","style","display","className","to","extact","activeClassName","onClick","id","href","MovieDetails","open","details","handleClose","Dialog","onClose","maxWidth","aria-labelledby","title","dividers","src","poster","alt","original_title","overview","homepage","target","rel","release_date","genres","length","map","gener","index","key","name","popularity","vote_average","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","other","disableTypography","Typography","variant","IconButton","aria-label","DialogContent","MuiDialogContent","Home","setDisplay","options","setOptions","search","setSearch","wrapperRef","useRef","movies","setPokemon","useEffect","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","current","contains","setOpen","setDetails","handleClickOpen","movieId","a","fetch","then","response","json","data","console","log","poster_path","ref","placeholder","autoComplete","onChange","onKeyUp","results","push","movie","onKeyPress","MovieList","movieList","append","pathname","Button","App","movieCategory","setMovieCategory","page","setPage","setMoviesList","alert","newMovieList","basename","exact","path","component","render","movieType","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa53616a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport \"./header.style.css\";\r\n\r\nconst Header = ({ fetchData }) => {\r\n  let [type, setType] = useState(\"Home\");\r\n  const showMenu = (type, value) => {\r\n    setType(type);\r\n    var element = document.getElementById(\"myLinks\");\r\n    if (value === \"hide\") {\r\n      element.style.display = \"none\";\r\n    } else {\r\n      element.style.display = \"block\";\r\n    }\r\n  };\r\n  const toggleMenu = () => {\r\n    var element = document.getElementById(\"myLinks\");\r\n    if(element.style.display === 'block') {\r\n      element.style.display = 'none';\r\n    } else {\r\n      element.style.display = 'block';\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"header-view\">\r\n      <div className=\"header-container\">\r\n        <h1>MOVIE CITY</h1>\r\n        <NavLink to=\"/home\">\r\n          <h3>Home</h3>\r\n        </NavLink>\r\n        <NavLink extact=\"true\" activeClassName=\"active\" onClick={() => fetchData(\"popular\")} to=\"/popular\">\r\n          <h3>Popular Movies</h3>\r\n        </NavLink>\r\n        <NavLink onClick={() => fetchData(\"top_rated\")} to=\"/top_rated\">\r\n          <h3>Top Rated Movies</h3>\r\n        </NavLink>\r\n        <NavLink onClick={() => fetchData(\"now_playing\")} to=\"/now_playing\">\r\n          <h3>Now Playing</h3>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"header-mobile-container\">\r\n        <Link \r\n          // to=\"/home\"\r\n          id=\"home\">\r\n          <span>{type}</span>\r\n        </Link>\r\n        <div id=\"myLinks\">\r\n          <Link\r\n            to=\"/home\"\r\n            onClick={() => {\r\n              showMenu(\"Home\", \"hide\");\r\n            }}\r\n          >\r\n            Home\r\n          </Link>\r\n          <Link\r\n            to=\"/popular\"\r\n            onClick={() => {\r\n              fetchData(\"popular\");\r\n              showMenu(\"Popular Movies\", \"hide\");\r\n            }}\r\n          >\r\n            Popular Movies\r\n          </Link>\r\n          <Link\r\n            to=\"/top_rated\"\r\n            onClick={() => {\r\n              fetchData(\"top_rated\");\r\n              showMenu(\"Top Rated Movies\", \"hide\");\r\n            }}\r\n          >\r\n            Top Rated Movies\r\n          </Link>\r\n          <Link\r\n            to=\"/now_playing\"\r\n            onClick={() => {\r\n              fetchData(\"now_playing\");\r\n              showMenu(\"Now Playing\", \"hide\");\r\n            }}\r\n          >\r\n            Now Playing\r\n          </Link>\r\n        </div>\r\n        <a\r\n          href=\"javascript:void(0)\"\r\n          className=\"icon\"\r\n          // onClick={() => showMenu(type, \"show\")}\r\n          onClick={toggleMenu}\r\n        >\r\n          <i className=\"fa fa-bars\"></i>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./movie-details.style.css\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst MovieDetails = ({ open, details, handleClose }) => {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={\"md\"}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"movie-title\" onClose={handleClose}>\r\n          {details.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers id=\"dialog-content\">\r\n          <div className=\"movie-details-container\">\r\n            <div className=\"details-poster-container\">\r\n              <img\r\n                src={\"https://image.tmdb.org/t/p/w500\" + details.poster}\r\n                className=\"details-poster\"\r\n                alt={details.original_title}\r\n              />\r\n            </div>\r\n            <div className=\"details-other-container\">\r\n              {details.overview && (\r\n                <div className=\"overview\">{details.overview}</div>\r\n              )}\r\n              {details.homepage && (\r\n                <div>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    className=\"movie-home-page\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href={details.homepage}\r\n                  >\r\n                    {details.homepage}\r\n                  </a>\r\n                </div>\r\n              )}\r\n              {details.release_date && (\r\n                <div>\r\n                  <b>Release date: </b>\r\n                  {details.release_date}\r\n                </div>\r\n              )}\r\n              {details.genres.length && (\r\n                <div>\r\n                  <b>Genres: </b>\r\n                  {details.genres.map((gener, index) => (\r\n                    <span key={index}>{gener.name} </span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {details.popularity && (\r\n                <div>\r\n                  <b>Popularity: </b>\r\n                  {details.popularity}\r\n                </div>\r\n              )}\r\n              {details.vote_average && (\r\n                <div>\r\n                  <b>Rating: </b>\r\n                  {details.vote_average}/10\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./home.style.css\";\r\n\r\nimport MovieDetails from \"../../components/movie-details/movie-details.component\";\r\nimport Scrollbar from \"react-smooth-scrollbar\";\r\n\r\nconst Home = () => {\r\n  const [display, setDisplay] = useState(false);\r\n  let [options, setOptions] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const wrapperRef = useRef(null);\r\n  const [movies, setPokemon] = useState([]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      window.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  const searchMovie = (event) => {\r\n    options = [];\r\n    setPokemon([]);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=fceee37c892707ca488b3969171ef2b9&language=en-US&query=${event.target.value}&page=1`\r\n    )\r\n      .then((value) => value.json())\r\n      .then((value) => {\r\n        if (value.results && value.results.length !== 0) {\r\n          movies.push(...value.results);\r\n          setOptions(movies);\r\n        }\r\n      });\r\n  };\r\n  //   -------------------------------\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [details, setDetails] = useState({\r\n    title: \"\",\r\n    poster: \"\",\r\n    genres: [],\r\n    homepage: \"\",\r\n    overview: \"\",\r\n    release_date: \"\",\r\n    popularity: 0,\r\n    vote_average: 0,\r\n  });\r\n\r\n  const handleClickOpen = async (movieId) => {\r\n    await fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=fceee37c892707ca488b3969171ef2b9&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setDetails({\r\n          title: data.original_title,\r\n          poster: data.poster_path,\r\n          genres: data.genres,\r\n          homepage: data.homepage,\r\n          overview: data.overview,\r\n          release_date: data.release_date,\r\n          popularity: data.popularity,\r\n          vote_average: data.vote_average,\r\n        });\r\n      });\r\n    setOpen(true);\r\n    setDisplay(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Scrollbar>\r\n      <div className=\"home-contianer\">\r\n        <div className=\"wallpaper-container\">\r\n          <div className=\"home-view-container\">\r\n            <div className=\"about-container\">\r\n              <div className=\"about\">About this app</div>\r\n              <div>\r\n                Movie City is made using React. This app helps the user to:{\" \"}\r\n              </div>\r\n              <ol>\r\n                <li>Search for his/her favourite movies.</li>\r\n                <li>Allows the user to get respective movie details.</li>\r\n                <li>\r\n                  Gives the user info about popular, top rated and now playing\r\n                  movies.\r\n                </li>\r\n              </ol>\r\n              This app uses themoviedb.org REST API to fetch the movie details.\r\n            </div>\r\n            <div className=\"about-container\">\r\n              <div className=\"about\">About me</div>\r\n              <div>\r\n                This app is developed by <b>ShankarKruthiventi</b>. You can\r\n                reach out to me at\r\n              </div>\r\n              <ul>\r\n                <li>\r\n                  <a\r\n                    href={\"https://www.linkedin.com/in/shankarkruthiventi/\"}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    LinkedIn\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href={\"https://github.com/shankar-kruthiventi\"}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Github\r\n                  </a>\r\n                </li>\r\n\r\n                <li>\r\n                  <a\r\n                    href={\"https://www.facebook.com/shankar.kruthiventi/\"}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Facebook\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href={\"https://www.instagram.com/madhav_kruthiventi/\"}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Instagram\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"finder-container\">\r\n            <div className=\"finder\">\r\n              <div className=\"find-text\">Search for movies here</div>\r\n\r\n              <div\r\n                ref={wrapperRef}\r\n                className=\"flex-container flex-column pos-rel\"\r\n              >\r\n                <input\r\n                  id=\"auto\"\r\n                  onClick={() => setDisplay(!display)}\r\n                  placeholder=\"Type to search\"\r\n                  value={search}\r\n                  autoComplete=\"off\"\r\n                  onChange={(event) => {\r\n                    setSearch(event.target.value);\r\n                  }}\r\n                  onKeyUp={searchMovie}\r\n                />\r\n                {display && options && options.length && (\r\n                  <div className=\"autoContainer\">\r\n                    {options.map((movie, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          {index < 3 && (\r\n                            <div\r\n                              // onClick={() => updatePokeDex(value.name)}\r\n                              className=\"option\"\r\n                              key={index}\r\n                              onKeyPress={(event) => {\r\n                                if (event.key === \"Enter\")\r\n                                  handleClickOpen(movie.id);\r\n                              }}\r\n                              onClick={() => handleClickOpen(movie.id)}\r\n                            >\r\n                              <span>{movie.original_title}</span>\r\n                              <div className=\"movie-search-poster-container\">\r\n                                <img\r\n                                  className=\"movie-search-poster\"\r\n                                  src={\r\n                                    \"https://image.tmdb.org/t/p/w500\" +\r\n                                    movie.poster_path\r\n                                  }\r\n                                  alt=\"poster\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <MovieDetails\r\n          open={open}\r\n          details={details}\r\n          handleClose={handleClose}\r\n        ></MovieDetails>\r\n      </div>\r\n    </Scrollbar>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport \"./movie-list.style.css\";\r\n\r\nimport MovieDetails from \"../../components/movie-details/movie-details.component\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Scrollbar from \"react-smooth-scrollbar\";\r\n\r\nconst MovieList = ({ movieList, append }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [details, setDetails] = useState({\r\n    title: \"\",\r\n    poster: \"\",\r\n    genres: [],\r\n    homepage: \"\",\r\n    overview: \"\",\r\n    release_date: \"\",\r\n    popularity: 0,\r\n    vote_average: 0,\r\n  });\r\n\r\n  const handleClickOpen = async (movieId) => {\r\n    await fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=fceee37c892707ca488b3969171ef2b9&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setDetails({\r\n          title: data.original_title,\r\n          poster: data.poster_path,\r\n          genres: data.genres,\r\n          homepage: data.homepage,\r\n          overview: data.overview,\r\n          release_date: data.release_date,\r\n          popularity: data.popularity,\r\n          vote_average: data.vote_average,\r\n        });\r\n      });\r\n    console.log(details.original_title);\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Scrollbar>\r\n      <div className=\"movies-container\">\r\n        <div className=\"movieList-container\">\r\n          {movieList && !movieList.length && (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n              }}\r\n            />\r\n          )}\r\n          {movieList &&\r\n            movieList.length >= 1 &&\r\n            movieList.map((movie, index) => (\r\n              <div id={index} key={index} className=\"poster-container\">\r\n                <img\r\n                  src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path}\r\n                  onClick={() => handleClickOpen(movie.id)}\r\n                  onKeyPress={(event) => { if(event.key === 'Enter') handleClickOpen(movie.id)}}\r\n                  alt={movie.original_title}\r\n                  className=\"poster\"\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"next-button-container\">\r\n          {movieList && movieList.length && (\r\n            <Button\r\n              onClick={append}\r\n              className=\"next-button\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            >\r\n              Show More\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <MovieDetails\r\n          open={open}\r\n          details={details}\r\n          handleClose={handleClose}\r\n        ></MovieDetails>\r\n      </div>\r\n    </Scrollbar>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './pages/header/header.component';\nimport Home from './pages/home/home.component';\nimport MovieList from './components/movie-list/movie-list.component';\n\nfunction App() {\n\n  let [movieCategory, setMovieCategory] = useState(\"\");\n  let [page, setPage] = useState(2);\n  const [movieList, setMoviesList] = useState([]);\n\n  function fetchData(movieCategory) {\n    if (!movieCategory) {\n      alert(\"no type\");\n    }\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieCategory}?api_key=fceee37c892707ca488b3969171ef2b9&language=en-US&page=1`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setMovieCategory(movieCategory);\n        setMoviesList(data.results);\n      });\n  }\n\n  const append = () => {\n    setPage((page) => page + 1);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieCategory}?api_key=fceee37c892707ca488b3969171ef2b9&language=en-US&page=${page}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        let newMovieList = [...movieList, ...data.results];\n        setMoviesList(newMovieList);\n      });\n  };\n\n  useEffect(() => {\n    fetchData('popular');\n  }, []);\n\n  return (\n  <HashRouter basename='/'>\n    <div className=\"app-container\">\n      <Header fetchData={fetchData}></Header>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\" component={Home} extact/>\n        <Route path=\"/popular\" render={()=><MovieList append={append} key={'popular'} movieList={movieList} movieType={'popular'}/>} />\n        <Route path=\"/top_rated\" render={()=><MovieList append={append} key={'top_rated'} movieList={movieList} movieType={'top_rated'}/>} />\n        <Route path=\"/now_playing\" render={()=><MovieList append={append} key={'now_playing'} movieList={movieList} movieType={'now_playing'}/>}/>\n      </Switch>\n    </div>\n  </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}